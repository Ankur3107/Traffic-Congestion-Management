getwd()
choose()
library(Ckmeans.1d.dp)
library(ggplot2)
sessionInfo()
x
1==1
devtools::install_github('thomasp85/ggforce')
library("caret", lib.loc="~/R/win-library/3.3")
library(ggplot2)
devtools::install_github('thomasp85/ggforce')
install.packages("udunits2")
devtools::install_github('thomasp85/ggforce')
devtools::install_github('thomasp85/ggraph')
install.packages("digest")
install.packages("digest")
devtools::install_github('thomasp85/ggraph')
devtools::install_github('thomasp85/ggraph')
x <- rnorm(20)
y <- rnorm(20) + 1
n <- seq(1,20,1)
data <- data.frame(n, x, y)
data
plot(x,y)
plot(y~x)
plot(y~x)
with(data, text(y~x, labels = row.names(data))
)
1-10^(-0.25)
x <- 1:100
head(x)
head(x,n = 10)
?order()
x <- c(5:1, 6:8, 12:9)
o <- order(x)
o
library(tm)
?Corpus()
?
VectorSource()
docs <- c("This is a text.", "This another one.")
docs
vs <- VectorSource(docs)
vs
inspect(vs)
inspect(VCorpus(vs))
library(shiny)
setwd("C:/Users/ANKUR SINGH/Desktop/Home Work/Shiny Tutorial")
runApp('shiny_renderUI')
install.packages("shinydashboard")
setwd("C:/Users/ANKUR SINGH/Desktop/Home Work/Shiny Tutorial/Shiny_dashboard")
runApp()
runApp()
runGadget()
runApp('Dashboard_02')
runApp('Dashboard_02')
runApp('Dashboard_02')
runApp('Dashboard_02')
div(class = "my-class", "Div content")
div(class = "my-class", p("Paragraph text"))
div
textInput("Id", "Label")
sidebarPanel(
div("First div"),
div("Second div")
)
runApp('Dashboard_02')
runApp('Dashboard_03')
fluidRow(box())
fluidRow()
fluidRow(... = )
box(plotOutput("plot1"))
dashboardBody(
fluidRow(
box(plotOutput("plot1")),
box(
"Box content here", br(), "More box content",
sliderInput("slider", "Slider input:", 1, 100, 50),
textInput("text", "Text input:")
)
)
)
runApp('Dashboard_03')
runApp('Dashboard_04')
runApp('Dashboard_05')
runApp('Dashboard_06')
setwd("C:/Users/ANKUR SINGH/Desktop/Current Projects/Traffic Project/dashboard")
runApp('C:/Users/ANKUR SINGH/Desktop/Home Work/Shiny Tutorial/Shiny_dashboard/Dashboard_02')
runApp('C:/Users/ANKUR SINGH/Desktop/Home Work/Shiny Tutorial/Shiny_dashboard/Dashboard_04')
runApp()
tabBox(
title = "First tabBox",
# The id lets us use input$tabset1 on the server to find the current tab
id = "tabset1", height = "250px",
tabPanel("Tab1", "First tab content"),
tabPanel("Tab2", "Tab content 2")
)
runApp()
runApp('C:/Users/ANKUR SINGH/Desktop/Home Work/Shiny Tutorial/Shiny_dashboard/Dashboard_03')
runApp()
runApp()
install.packages("dygraphs")
library(dygraphs)
lungDeaths <- cbind(mdeaths, fdeaths)
lungDeaths
fdeaths
dygraph(fdeaths)
load("C:/Users/ANKUR SINGH/Desktop/Current Projects/Traffic Project/forecast.RData")
dygraph(t)
t
dygraph(data = t)
?dygraph()
head(tdata)
dygraph(tdata)
class(t)
t <- xts
library(xts)
tt <- xts(t)
tt <- xts(tdata)
tt <- xts(tdata$count,order.by = tdata$time)
tt <- as.xts(t)
runApp()
class(mdeaths)
mdeaths
mdeaths
box(title = "Inputs", status = "warning",solidHeader = TRUE,collapsible = TRUE,
"Box content here", br(), "More box content",
sliderInput("slider", "Slider input:", 1, 100, 50)
)
